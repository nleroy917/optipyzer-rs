use std::collections::HashMap;

pub type ProhibitedCodons = HashMap<char, Vec<String>>;
pub type Query = HashMap<String, AminoAcidMap>;
type AminoAcidMap = HashMap<char, CodonPreference>;
type CodonPreference = HashMap<String, f32>;


#[derive(Debug)]
pub struct Organism {
    org_id: i32,
    division: String,
    assembly: String,
    taxid: i32,
    species: String,
    organelle: String,
    translation_table: i32,
    num_cds: i32,
    num_codons: i32,
    gc_perc: f32,
    gc1_perc: f32,
    gc2_perc: f32,
    gc3_perc: f32,
}

#[derive(Debug)]
pub struct CodonUsage {
    org_id: i32,
    ttt: i32,
    ttc: i32,
    tta: i32,
    ttg: i32,
    ctt: i32,
    ctc: i32,
    cta: i32,
    ctg: i32,
    att: i32,
    atc: i32,
    ata: i32,
    atg: i32,
    gtt: i32,
    gtc: i32,
    gta: i32,
    gtg: i32,
    tat: i32,
    tac: i32,
    taa: i32,
    tag: i32,
    cat: i32,
    cac: i32,
    caa: i32,
    cag: i32,
    aat: i32,
    aac: i32,
    aaa: i32,
    aag: i32,
    gat: i32,
    gac: i32,
    gaa: i32,
    gag: i32,
    tct: i32,
    tcc: i32,
    tca: i32,
    tcg: i32,
    cct: i32,
    ccc: i32,
    cca: i32,
    ccg: i32,
    act: i32,
    acc: i32,
    aca: i32,
    acg: i32,
    gct: i32,
    gcc: i32,
    gca: i32,
    gcg: i32,
    tgt: i32,
    tgc: i32,
    tga: i32,
    tgg: i32,
    cgt: i32,
    cgc: i32,
    cga: i32,
    cgg: i32,
    agt: i32,
    agc: i32,
    aga: i32,
    agg: i32,
    ggt: i32,
    ggc: i32,
    gga: i32,
    ggg: i32,
}
